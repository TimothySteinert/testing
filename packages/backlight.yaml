switch:
  - platform: template
    name: "Automatic Backlight"
    id: automatic_backlight_switch
    restore_mode: RESTORE_DEFAULT_${backlight_mode^^}   # expands to ON if auto, OFF if manual
    lambda: |-
      return ${backlight_mode} == "auto";
    turn_on_action:
      - logger.log: "Backlight set to AUTO mode"
    turn_off_action:
      - logger.log: "Backlight set to MANUAL mode"

number:
  - platform: template
    name: "Backlight Timeout"
    id: backlight_timeout_num
    min_value: 0
    max_value: 600
    step: 1
    restore_value: true
    initial_value: ${backlight_timeout}
    optimistic: true

light:
  - platform: neopixelbus
    id: backlight_light
    name: "Backlight"
    type: GRB
    pin: GPIO5
    num_leds: 5
    restore_mode: RESTORE_DEFAULT_OFF
    default_transition_length: 0.5s
    restore_value: true
    gamma_correct: 2.8
    default_color: [${backlight_rgb}]        # substitution sets starting RGB
    default_brightness: ${backlight_brightness}
    on_turn_on:
      - if:
          condition:
            switch.is_on: automatic_backlight_switch
          then:
            - script.execute: auto_backlight_timer

script:
  - id: auto_backlight_timer
    mode: restart
    then:
      - delay: !lambda "return (int)id(backlight_timeout_num).state * 1000;"
      - if:
          condition:
            switch.is_on: automatic_backlight_switch
          then:
            - light.turn_off: backlight_light
