uart:
  id: uart_bus
  tx_pin: 22
  rx_pin: 21
  baud_rate: 9600
  on_data:
    then:
      - lambda: |-
          static std::vector<uint8_t> buf;
          while (available) {
            uint8_t byte;
            read_byte(&byte);
            buf.push_back(byte);

            if (buf.size() >= 3) {
              uint8_t id_byte   = buf[0];
              uint8_t data_byte = buf[1];
              uint8_t crc_byte  = buf[2];
              buf.clear();

              // Simple XOR CRC
              uint8_t calc_crc = id_byte ^ data_byte;

              if (id_byte == 0xA0 && crc_byte == calc_crc) {
                std::string label;
                switch (data_byte) {
                  case 0x31: label = "1"; break;
                  case 0x32: label = "2"; break;
                  case 0x33: label = "3"; break;
                  case 0x41: label = "Away"; break;

                  case 0x34: label = "4"; break;
                  case 0x35: label = "5"; break;
                  case 0x36: label = "6"; break;
                  case 0x48: label = "Home"; break;

                  case 0x37: label = "7"; break;
                  case 0x38: label = "8"; break;
                  case 0x39: label = "9"; break;
                  case 0x44: label = "Disarm"; break;

                  case 0x43: label = "Clear"; break;
                  case 0x30: label = "0"; break;
                  case 0x45: label = "Enter"; break;
                  case 0x4F: label = "Custom"; break;

                  default:   label = "Unknown"; break;
                }
                ESP_LOGI("uart_rx", "Key Pressed: %s (0x%02X)", label.c_str(), data_byte);
              } else {
                ESP_LOGW("uart_rx", "Bad packet: %02X %02X %02X (CRC mismatch)", id_byte, data_byte, crc_byte);
              }
            }
          }
